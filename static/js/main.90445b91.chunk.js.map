{"version":3,"sources":["components/layout/Navbar.js","components/elements/Button.js","components/pages/Main.js","components/elements/MiniCard.js","redux/cards.js","components/partial/AddCard.js","components/pages/EditCards.js","components/pages/PracticeSetup.js","components/elements/Card.js","components/partial/PracticeView.js","components/partial/StatsView.js","components/pages/Practice.js","components/partial/PracticeContainer.js","redux/index.js","components/App.js","index.js"],"names":["Navbar","props","theme","useTheme","classes","makeStyles","root","backgroundColor","colorLake","color","colorIceLight","link","textDecoration","useStyles","AppBar","position","className","data-testid","Toolbar","IconButton","edge","aria-label","to","Typography","variant","Button","width","height","fontSize","children","Main","marginTop","Grid","container","justify","item","direction","spacing","xs","sm","md","lg","MiniCard","frontText","backText","palette","primary","main","textAlign","content","divider","border","secondary","CardContent","Divider","getCardsFromStorage","localStorageFlashcards","JSON","parse","localStorage","getItem","length","flashcards","AddCard","dispatch","useDispatch","INITIAL_CARD_STATE","useState","cardText","setCardText","maxWidth","handleTextChange","name","value","prev","TextField","label","onChange","e","target","disabled","onClick","date","Date","text","type","addCard","EditCards","state","useSelector","console","log","margin","cardList","display","flexWrap","card","useEffect","miniCards","map","description","definition","payload","PracticeSetup","setupData","cardAmount","setAmount","MIN_AMOUNT","MAX_AMOUNT","filter","setFilter","reverted","setReverted","paddingTop","paddingLeft","section","marginBottom","input","InputProps","RadioGroup","FormControlLabel","control","Radio","checked","Checkbox","Card","cursor","backfaceVisibility","transition","dark","back","transform","flipFront","flipBack","delayedBackText","setDelayedBackText","setTimeout","Box","document","querySelector","classList","toggle","id","PracticeView","currentPassed","currentCard","handleCheck","finishRun","button","check","success","fail","error","align","StatsView","stats","tries","fails","Math","floor","Practice","allCardList","practiceCardList","setPracticeCardList","setFails","setTries","current","setCurrent","practiceOver","setPracticeOver","lastPickedCard","setLastPickedCard","createSet","pickRandomCard","rand","random","randomCards","index","getIndexToSplice","splice","method","hardest","Infinity","hardestIndex","forEach","factor","failed","passed","easiest","easiestIndex","incrementStats","c","PracticeContainer","setCardAmount","exact","path","amount","isNaN","store","createStore","cards","action","newCard","creationDate","find","setItem","stringify","createMuiTheme","colorSand","colorPeach","colorIceDark","App","CssBaseline","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.90445b91.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = props => {\r\n   const theme = useTheme();\r\n   const useStyles = makeStyles({\r\n      root: {\r\n         backgroundColor: theme.colorLake,\r\n         color: theme.colorIceLight\r\n      },\r\n      link: {\r\n         textDecoration: 'none',\r\n         color: theme.colorIceLight\r\n      }\r\n   });\r\n   const classes = useStyles(props);\r\n\r\n   return (\r\n      <AppBar position=\"static\" className={classes.root} data-testid=\"navbar\">\r\n         <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n               <MenuIcon color=\"inherit\" data-testid=\"menuIcon\" />\r\n            </IconButton>\r\n            <Link to=\"/\" className={classes.link}>\r\n               <Typography variant=\"h6\">Flashcards</Typography>\r\n            </Link>\r\n         </Toolbar>\r\n      </AppBar>\r\n   );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button as MuiButton } from '@material-ui/core';\r\n\r\nconst Button = props => {\r\n   const useStyles = makeStyles({\r\n      root: {\r\n         width: '100%',\r\n         height: '80px',\r\n         fontSize: '20px'\r\n      }\r\n   });\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <MuiButton variant=\"contained\" color=\"primary\" className={classes.root}>\r\n         {props.children}\r\n      </MuiButton>\r\n   );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport Button from '../elements/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Main = () => {\r\n   const useStyles = makeStyles({\r\n      root: {\r\n         marginTop: '50px'\r\n      }\r\n   });\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <Grid container justify=\"center\" data-testid=\"main\">\r\n         <Grid\r\n            container\r\n            item\r\n            direction=\"column\"\r\n            className={classes.root}\r\n            spacing={3}\r\n            xs={12}\r\n            sm={8}\r\n            md={6}\r\n            lg={4}\r\n         >\r\n            <Grid item>\r\n               <Link to=\"/practice/Setup\">\r\n                  <Button>Practice</Button>\r\n               </Link>\r\n            </Grid>\r\n            <Grid item>\r\n               <Link to=\"/editCards\">\r\n                  <Button>Edit cards</Button>\r\n               </Link>\r\n            </Grid>\r\n         </Grid>\r\n      </Grid>\r\n   );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport {\r\n   Card as MuiCard,\r\n   CardContent,\r\n   Divider,\r\n   Button\r\n} from '@material-ui/core';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst MiniCard = ({ frontText, backText }) => {\r\n   const theme = useTheme();\r\n   const useStyles = makeStyles({\r\n      root: {\r\n         width: '8rem',\r\n         height: '15rem',\r\n         marginTop: '1rem',\r\n         backgroundColor: theme.palette.primary.main,\r\n         color: theme.colorIceLight,\r\n         textAlign: 'center'\r\n      },\r\n      content: {\r\n         height: '50%'\r\n      },\r\n      divider: {\r\n         border: `1px solid ${theme.palette.secondary.main}`\r\n      }\r\n   });\r\n   const classes = useStyles();\r\n   return (\r\n      <MuiCard color=\"primary\" className={classes.root}>\r\n         <CardContent className={classes.content}>{frontText}</CardContent>\r\n         <Divider className={classes.divider}></Divider>\r\n         <CardContent className={classes.content}>{backText}</CardContent>\r\n      </MuiCard>\r\n   );\r\n};\r\n\r\nexport default MiniCard;\r\n","import flashcards from '../data/flashcards';\r\n\r\nexport function addCard(date, text) {\r\n   return {\r\n      type: 'ADD_CARD',\r\n      date: date,\r\n      text: text\r\n   };\r\n}\r\n\r\nexport function removeCard(description) {\r\n   return {\r\n      type: 'REMOVE_CARD',\r\n      payload: description\r\n   };\r\n}\r\n\r\nexport function incrementStats(description, success) {\r\n   return {\r\n      type: 'INCREMENT_STATS',\r\n      payload: description,\r\n      success: success\r\n   };\r\n}\r\n\r\nexport function saveData() {\r\n   return {\r\n      type: 'SAVE_DATA'\r\n   };\r\n}\r\n\r\nexport function getCardsFromStorage() {\r\n   let localStorageFlashcards = JSON.parse(localStorage.getItem('data'));\r\n   if (localStorageFlashcards && localStorageFlashcards.length > 0) {\r\n      return localStorageFlashcards;\r\n   } else return flashcards;\r\n}\r\n\r\nexport default function cards(cards = getCardsFromStorage(), action) {\r\n   switch (action.type) {\r\n      case 'ADD_CARD':\r\n         const newCard = {\r\n            description: action.text.frontText,\r\n            definition: action.text.backText,\r\n            failed: 0,\r\n            passed: 0,\r\n            creationDate: action.date\r\n         };\r\n         return [...cards, newCard];\r\n      case 'REMOVE_CARD':\r\n         return cards.filter(card => card.description !== action.payload);\r\n\r\n      case 'INCREMENT_STATS':\r\n         const card = cards.find(card => card.description === action.payload);\r\n         if (!card) {\r\n            return cards;\r\n         }\r\n         if (action.success) {\r\n            card.passed++;\r\n         } else {\r\n            card.failed++;\r\n         }\r\n         return [\r\n            ...cards.filter(card => card.description !== action.payload),\r\n            card\r\n         ];\r\n      case 'SAVE_DATA':\r\n         localStorage.setItem('data', JSON.stringify(cards));\r\n         return cards;\r\n      default:\r\n         return cards;\r\n   }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { TextField, Button, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { addCard } from '../../redux/cards';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst AddCard = () => {\r\n   const dispatch = useDispatch();\r\n   const INITIAL_CARD_STATE = { frontText: '', backText: '' };\r\n   const [cardText, setCardText] = useState(INITIAL_CARD_STATE);\r\n\r\n   const useStyles = makeStyles({\r\n      root: {\r\n         maxWidth: '20rem'\r\n      }\r\n   });\r\n   const classes = useStyles();\r\n\r\n   const handleTextChange = ({ name, value }) => {\r\n      setCardText(prev => ({\r\n         ...prev,\r\n         [name]: value\r\n      }));\r\n   };\r\n\r\n   const handleAdd = () => {\r\n      const date = new Date();\r\n      dispatch(addCard(date, cardText));\r\n      setCardText(INITIAL_CARD_STATE);\r\n   };\r\n\r\n   return (\r\n      <Grid container direction=\"column\" className={classes.root}>\r\n         <TextField\r\n            name=\"frontText\"\r\n            value={cardText.frontText}\r\n            label=\"Front side\"\r\n            onChange={e => handleTextChange(e.target)}\r\n         ></TextField>\r\n         <TextField\r\n            name=\"backText\"\r\n            value={cardText.backText}\r\n            label=\"Back side\"\r\n            onChange={e => handleTextChange(e.target)}\r\n         ></TextField>\r\n         <Button\r\n            variant=\"contained\"\r\n            disabled={!cardText.frontText || !cardText.backText}\r\n            color=\"primary\"\r\n            onClick={handleAdd}\r\n         >\r\n            Add new card\r\n         </Button>\r\n      </Grid>\r\n   );\r\n};\r\n\r\nexport default AddCard;\r\n","import React, { useEffect } from 'react';\r\nimport MiniCard from '../elements/MiniCard';\r\nimport AddCard from '../partial/AddCard';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { removeCard, saveData } from '../../redux/cards';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst EditCards = () => {\r\n   const state = useSelector(state => state);\r\n   console.log(state);\r\n   const dispatch = useDispatch();\r\n   const useStyles = makeStyles({\r\n      addCard: {\r\n         margin: '1rem 0 0 1rem'\r\n      },\r\n      cardList: {\r\n         display: 'flex',\r\n         flexWrap: 'wrap'\r\n      },\r\n      card: {\r\n         margin: '1rem'\r\n      }\r\n   });\r\n   const classes = useStyles();\r\n\r\n   useEffect(() => {\r\n      return () => {\r\n         dispatch(saveData());\r\n      };\r\n   });\r\n\r\n   const miniCards = state.map(card => (\r\n      <div className={classes.card}>\r\n         <MiniCard\r\n            frontText={card.description}\r\n            backText={card.definition}\r\n         ></MiniCard>\r\n         <Button\r\n            variant=\"contained\"\r\n            onClick={() => dispatch(removeCard(card.description))}\r\n         >\r\n            remove\r\n         </Button>\r\n      </div>\r\n   ));\r\n\r\n   return (\r\n      <div>\r\n         <Grid className={classes.addCard}>\r\n            <AddCard></AddCard>\r\n            <Grid className={classes.cardList}>{miniCards}</Grid>\r\n         </Grid>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default EditCards;\r\n","import React from 'react';\r\nimport {\r\n   TextField,\r\n   Checkbox,\r\n   Grid,\r\n   RadioGroup,\r\n   Radio,\r\n   FormControlLabel\r\n} from '@material-ui/core';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PracticeSetup = ({\r\n   setupData: {\r\n      cardAmount,\r\n      setAmount,\r\n      MIN_AMOUNT,\r\n      MAX_AMOUNT,\r\n      filter,\r\n      setFilter,\r\n      reverted,\r\n      setReverted\r\n   }\r\n}) => {\r\n   const theme = useTheme();\r\n   const useStyles = makeStyles({\r\n      root: {\r\n         paddingTop: '20px',\r\n         paddingLeft: '50px'\r\n      },\r\n      section: {\r\n         marginBottom: '20px'\r\n      },\r\n      input: {\r\n         color: theme.palette.primary.main,\r\n         width: '200px'\r\n      },\r\n      link: {\r\n         textDecoration: 'none',\r\n         color: theme.colorIceLight\r\n      }\r\n   });\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <Grid container direction=\"column\" className={classes.root}>\r\n         <Grid item className={classes.section}>\r\n            <TextField\r\n               label={`How many cards (${MIN_AMOUNT}-${MAX_AMOUNT})`}\r\n               type=\"text\"\r\n               value={cardAmount}\r\n               onChange={e => setAmount(e)}\r\n               InputProps={{ className: classes.input }}\r\n            />\r\n         </Grid>\r\n         <Grid item className={classes.section}>\r\n            <RadioGroup onChange={e => setFilter(e.target.value)}>\r\n               <FormControlLabel\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Random\"\r\n                  value=\"RANDOM\"\r\n                  checked={filter === 'RANDOM'}\r\n               ></FormControlLabel>\r\n               <FormControlLabel\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Easy set\"\r\n                  value=\"EASY\"\r\n                  checked={filter === 'EASY'}\r\n               ></FormControlLabel>\r\n               <FormControlLabel\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Hard set\"\r\n                  value=\"HARD\"\r\n                  checked={filter === 'HARD'}\r\n               ></FormControlLabel>\r\n               {/* <FormControlLabel\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Most recently added\"\r\n                  value=\"NEW\"\r\n                  checked={filter === 'NEW'}\r\n               ></FormControlLabel> */}\r\n            </RadioGroup>\r\n         </Grid>\r\n         <Grid item className={classes.section}>\r\n            <FormControlLabel\r\n               control={\r\n                  <Checkbox\r\n                     label={`revert`}\r\n                     checked={reverted}\r\n                     onChange={e => setReverted(e.target.checked)}\r\n                     color=\"primary\"\r\n                  />\r\n               }\r\n               label=\"Revert\"\r\n            />\r\n         </Grid>\r\n         <Grid item className={classes.section}>\r\n            <Button\r\n               disabled={cardAmount === ''}\r\n               variant=\"contained\"\r\n               color=\"primary\"\r\n            >\r\n               <Link to=\"/practice/start\" className={classes.link}>\r\n                  Start\r\n               </Link>\r\n            </Button>\r\n         </Grid>\r\n      </Grid>\r\n   );\r\n};\r\n\r\nexport default PracticeSetup;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card as MuiCard, CardContent, Grid, Box } from '@material-ui/core';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst Card = ({ children, frontText, backText }) => {\r\n   const theme = useTheme();\r\n   const useStyles = makeStyles({\r\n      root: {\r\n         height: '25rem',\r\n         width: '20rem',\r\n         fontSize: '2rem',\r\n         cursor: 'pointer',\r\n         position: 'relative'\r\n      },\r\n      card: {\r\n         backgroundColor: theme.palette.primary.main,\r\n         color: theme.palette.secondary.main,\r\n         textAlign: 'center',\r\n         height: '100%',\r\n         width: '100%',\r\n         position: 'absolute',\r\n         backfaceVisibility: 'hidden',\r\n         transition: 'transform 0.8s ease, background-color 0.2s',\r\n         '&:hover': {\r\n            backgroundColor: theme.palette.primary.dark\r\n         }\r\n      },\r\n      back: {\r\n         transform: 'rotateY(180deg)'\r\n      },\r\n      container: {\r\n         paddingTop: '1rem'\r\n      },\r\n      flipFront: {\r\n         transform: 'rotateY(180deg)'\r\n      },\r\n      flipBack: {\r\n         transform: 'rotateY(0deg)'\r\n      }\r\n   });\r\n   const classes = useStyles();\r\n   //TODO refactor\r\n   const flipCard = () => {\r\n      document.querySelector('#cardFront').classList.toggle(classes.flipFront);\r\n      document.querySelector('#cardBack').classList.toggle(classes.flipBack);\r\n   };\r\n\r\n   //for preventing peeking next definition\r\n   const [delayedBackText, setDelayedBackText] = useState('');\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         setDelayedBackText(backText);\r\n      }, 200);\r\n   });\r\n\r\n   return (\r\n      <Grid container justify=\"center\" className={classes.container}>\r\n         <Box className={classes.root} onClick={flipCard}>\r\n            <MuiCard id=\"cardFront\" className={classes.card}>\r\n               <CardContent>{frontText}</CardContent>\r\n            </MuiCard>\r\n            <MuiCard\r\n               id=\"cardBack\"\r\n               className={`${classes.card} ${classes.back}`}\r\n            >\r\n               <CardContent>{delayedBackText}</CardContent>\r\n            </MuiCard>\r\n         </Box>\r\n      </Grid>\r\n   );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from '../elements/Card';\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst PracticeView = ({\r\n   cardAmount,\r\n   currentPassed,\r\n   currentCard,\r\n   handleCheck,\r\n   finishRun,\r\n   reverted\r\n}) => {\r\n   const theme = useTheme();\r\n   const useStyles = makeStyles({\r\n      container: {\r\n         paddingTop: '1rem'\r\n      },\r\n      button: {\r\n         width: '100%',\r\n         height: '3rem',\r\n         marginTop: '1rem'\r\n      },\r\n      check: {\r\n         backgroundColor: theme.palette.success.main,\r\n         '&:hover': {\r\n            backgroundColor: theme.palette.success.dark\r\n         }\r\n      },\r\n      fail: {\r\n         backgroundColor: theme.palette.error.main,\r\n         '&:hover': {\r\n            backgroundColor: theme.palette.error.dark\r\n         }\r\n      }\r\n   });\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <Grid container justify=\"center\" className={classes.container}>\r\n         <Grid item>\r\n            <Grid>\r\n               <Typography align=\"right\" variant=\"h4\">\r\n                  Passed: {currentPassed}/{cardAmount}\r\n               </Typography>\r\n               <Card\r\n                  frontText={\r\n                     reverted ? currentCard.definition : currentCard.description\r\n                  }\r\n                  backText={\r\n                     reverted ? currentCard.description : currentCard.definition\r\n                  }\r\n               ></Card>\r\n            </Grid>\r\n            <Grid>\r\n               <Button\r\n                  variant=\"contained\"\r\n                  className={`${classes.button} ${classes.check}`}\r\n                  onClick={() => handleCheck(true, currentCard)}\r\n               >\r\n                  <CheckIcon></CheckIcon>\r\n               </Button>\r\n            </Grid>\r\n            <Grid>\r\n               <Button\r\n                  variant=\"contained\"\r\n                  className={`${classes.button} ${classes.fail}`}\r\n                  onClick={() => handleCheck(false, currentCard)}\r\n               >\r\n                  <CloseIcon></CloseIcon>\r\n               </Button>\r\n            </Grid>\r\n            <Grid>\r\n               <Button\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  color=\"primary\"\r\n                  onClick={() => finishRun(true)}\r\n               >\r\n                  finish run\r\n               </Button>\r\n            </Grid>\r\n         </Grid>\r\n      </Grid>\r\n   );\r\n};\r\n\r\nexport default PracticeView;\r\n","import React from 'react';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StatsView = ({ stats: { cardAmount, tries, fails } }) => {\r\n   const useStyles = makeStyles({\r\n      root: {\r\n         paddingTop: '2rem'\r\n      },\r\n      button: {\r\n         marginTop: '2rem'\r\n      }\r\n   });\r\n   const classes = useStyles();\r\n   return (\r\n      <Grid container justify=\"center\" className={classes.root}>\r\n         <Grid item>\r\n            <Typography variant=\"h4\">Practice stats</Typography>\r\n            <Typography variant=\"h6\">cards: {cardAmount}</Typography>\r\n            <Typography variant=\"h6\">tries: {tries}</Typography>\r\n            <Typography variant=\"h6\">fails: {fails}</Typography>\r\n            <Typography variant=\"h6\">\r\n               efficiency:{' '}\r\n               {tries === 0\r\n                  ? '0%'\r\n                  : `${Math.floor(((tries - fails) / tries) * 100)}%`}\r\n            </Typography>\r\n            <Link to=\"/\">\r\n               <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n               >\r\n                  Home\r\n               </Button>\r\n            </Link>\r\n         </Grid>\r\n      </Grid>\r\n   );\r\n};\r\n\r\nexport default StatsView;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { incrementStats } from '../../redux/cards';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PracticeView from '../partial/PracticeView';\r\nimport StatsView from '../partial/StatsView';\r\n\r\nconst Practice = ({ cardAmount, filter, reverted }) => {\r\n   const allCardList = useSelector(state => state);\r\n   const dispatch = useDispatch();\r\n   const [practiceCardList, setPracticeCardList] = useState([]);\r\n   const [fails, setFails] = useState(0);\r\n   const [tries, setTries] = useState(0);\r\n   const [current, setCurrent] = useState({});\r\n   const [practiceOver, setPracticeOver] = useState(false);\r\n   const [lastPickedCard, setLastPickedCard] = useState(null);\r\n\r\n   useEffect(() => {\r\n      createSet(filter);\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      if (tries !== 0 && practiceCardList.length === 0) {\r\n         setPracticeOver(true);\r\n      }\r\n      pickRandomCard();\r\n   }, [practiceCardList, tries]);\r\n\r\n   const pickRandomCard = () => {\r\n      const length = practiceCardList.length;\r\n      let rand = -1;\r\n      if (practiceCardList.length > 1) {\r\n         do {\r\n            rand = Math.floor(Math.random() * length);\r\n         } while (rand === lastPickedCard);\r\n      } else rand = 0;\r\n      setCurrent(practiceCardList[rand]);\r\n      setLastPickedCard(rand);\r\n   };\r\n\r\n   const createSet = filter => {\r\n      const randomCards = [...allCardList];\r\n      while (randomCards.length > cardAmount) {\r\n         const index = getIndexToSplice(filter, randomCards);\r\n         randomCards.splice(index, 1);\r\n      }\r\n      setPracticeCardList(randomCards);\r\n   };\r\n\r\n   const getIndexToSplice = (method, randomCards) => {\r\n      switch (filter) {\r\n         case 'RANDOM':\r\n            return Math.floor(Math.random() * randomCards.length);\r\n         case 'EASY':\r\n            let hardest = Infinity;\r\n            let hardestIndex = 0;\r\n            randomCards.forEach((card, index) => {\r\n               console.log(index);\r\n               const factor =\r\n                  card.failed === 0 ? Infinity : card.passed / card.failed;\r\n               if (factor < hardest) {\r\n                  hardestIndex = index;\r\n                  hardest = factor;\r\n               }\r\n            });\r\n            return hardestIndex;\r\n         case 'HARD':\r\n            let easiest = 0;\r\n            let easiestIndex = 0;\r\n            randomCards.forEach((card, index) => {\r\n               console.log(index);\r\n               const factor =\r\n                  card.failed === 0 ? Infinity : card.passed / card.failed;\r\n               if (factor > easiest) {\r\n                  easiestIndex = index;\r\n                  easiest = factor;\r\n               }\r\n            });\r\n            return easiestIndex;\r\n         default:\r\n            return 0;\r\n      }\r\n   };\r\n\r\n   const handleCheck = (success, card) => {\r\n      dispatch(incrementStats(card.description, success));\r\n      if (success) {\r\n         setPracticeCardList(prev =>\r\n            prev.filter(c => c.description !== card.description)\r\n         );\r\n      } else {\r\n         setFails(prev => prev + 1);\r\n      }\r\n      setTries(prev => prev + 1);\r\n   };\r\n\r\n   return practiceOver ? (\r\n      <StatsView stats={{ cardAmount, tries, fails }} />\r\n   ) : (\r\n      <PracticeView\r\n         cardAmount={cardAmount}\r\n         currentPassed={cardAmount - practiceCardList.length}\r\n         currentCard={current ? current : { description: '', definition: '' }}\r\n         handleCheck={handleCheck}\r\n         finishRun={setPracticeOver}\r\n         reverted={reverted}\r\n      />\r\n   );\r\n};\r\n\r\nexport default Practice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PracticeSetup from '../pages/PracticeSetup';\r\nimport Practice from '../pages/Practice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { saveData } from '../../redux/cards';\r\n\r\nconst PracticeContainer = () => {\r\n   const MAX_AMOUNT = useSelector(state => state.length);\r\n   const MIN_AMOUNT = 1;\r\n   const [cardAmount, setCardAmount] = useState(MAX_AMOUNT);\r\n   const [filter, setFilter] = useState('RANDOM');\r\n   const [reverted, setReverted] = useState(false);\r\n   const dispatch = useDispatch();\r\n\r\n   const setAmount = ({ target }) => {\r\n      const amount = target.value;\r\n      if (\r\n         amount === '' ||\r\n         (!isNaN(amount) && amount >= MIN_AMOUNT && amount <= MAX_AMOUNT)\r\n      ) {\r\n         setCardAmount(amount);\r\n      }\r\n   };\r\n\r\n   useEffect(() => {\r\n      return () => {\r\n         dispatch(saveData());\r\n      };\r\n   });\r\n\r\n   return (\r\n      <>\r\n         <Route exact path=\"/practice/start\">\r\n            <Practice\r\n               cardAmount={cardAmount === '' ? 1 : cardAmount}\r\n               filter={filter}\r\n               reverted={reverted}\r\n            />\r\n         </Route>\r\n         <Route exact path=\"/practice/Setup\">\r\n            <PracticeSetup\r\n               setupData={{\r\n                  setAmount,\r\n                  cardAmount,\r\n                  MIN_AMOUNT,\r\n                  MAX_AMOUNT,\r\n                  filter,\r\n                  setFilter,\r\n                  reverted,\r\n                  setReverted\r\n               }}\r\n            />\r\n         </Route>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default PracticeContainer;\r\n","import { createStore } from 'redux';\r\nimport cards from './cards';\r\n\r\nconst store = createStore(cards);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport Navbar from './layout/Navbar';\nimport Main from './pages/Main';\nimport EditCards from './pages/EditCards';\nimport PracticeContainer from './partial/PracticeContainer';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport { CssBaseline } from '@material-ui/core';\nimport store from '../redux';\nimport { Provider } from 'react-redux';\n\nconst theme = createMuiTheme({\n   colorSand: '#fbe8a6',\n   colorPeach: '#f4976c',\n   colorLake: '#303c6c',\n   colorIceDark: '#b4dfe5',\n   colorIceLight: '#d2fdff',\n   palette: {\n      primary: {\n         main: '#303c6c'\n      },\n      secondary: {\n         main: '#fbe8a6'\n      },\n      success: {\n         main: '#4caf50'\n      },\n      error: {\n         main: '#f44336'\n      }\n   }\n});\n\nfunction App() {\n   return (\n      <Provider store={store}>\n         <Router>\n            <CssBaseline>\n               <MuiThemeProvider theme={theme}>\n                  <Navbar />\n                  <Route exact path=\"/\">\n                     <Main />\n                  </Route>\n                  <Route path=\"/practice\">\n                     <PracticeContainer />\n                  </Route>\n                  <Route exact path=\"/editCards\">\n                     <EditCards />\n                  </Route>\n               </MuiThemeProvider>\n            </CssBaseline>\n         </Router>\n      </Provider>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}